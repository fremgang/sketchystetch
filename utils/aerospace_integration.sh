#!/bin/bash

# aerospace_integration.sh - Set up integration between sketchybar and aerospace
# Location: ~/.config/sketchybar/utils/aerospace_integration.sh

CONFIG_DIR="$HOME/.config/sketchybar"
AEROSPACE_CONFIG="$HOME/.config/aerospace/aerospace.toml"
SKHD_CONFIG="$HOME/.config/skhd/sketchybar_aerospace.skhd"

# Create aerospace trigger in skhd config
setup_skhd() {
  echo "Setting up skhd integration..."
  
  # Create the skhd config directory if it doesn't exist
  mkdir -p "$(dirname "$SKHD_CONFIG")"
  
  # Create the sketchybar-specific skhd config
  echo "# Generated by aerospace_integration.sh - $(date)" > "$SKHD_CONFIG"
  echo "# Sketchybar + Aerospace Integration" >> "$SKHD_CONFIG"
  echo "" >> "$SKHD_CONFIG"
  
  # Add workspace switching shortcuts
  for sid in {1..9}; do
    # Direct workspace dot pattern for immediate UI feedback
    dots=""
    for i in {1..9}; do
      if [ "$i" -eq "$sid" ]; then
        dots="${dots}●"
      else
        dots="${dots}○"
      fi
      dots="${dots} "
    done
    
    # Add the command with direct workspace indicator update
    echo "cmd - $sid : aerospace workspace $sid && sketchybar --set workspaces label=\"$dots\"" >> "$SKHD_CONFIG"
  done
  
  # Add load directive to main skhd config if not already present
  if [ -f "$HOME/.config/skhd/skhdrc" ]; then
    if ! grep -q "sketchybar_aerospace.skhd" "$HOME/.config/skhd/skhdrc"; then
      echo "" >> "$HOME/.config/skhd/skhdrc"
      echo "# Load sketchybar aerospace integration" >> "$HOME/.config/skhd/skhdrc"
      echo ".load \"$SKHD_CONFIG\"" >> "$HOME/.config/skhd/skhdrc"
    fi
  else
    # Create main skhd config if it doesn't exist
    echo "Creating main skhd config..." 
    echo "# Main skhd config" > "$HOME/.config/skhd/skhdrc"
    echo ".load \"$SKHD_CONFIG\"" >> "$HOME/.config/skhd/skhdrc"
  fi
  
  echo "skhd integration complete!"
}

# Add aerospace event trigger
setup_aerospace() {
  echo "Setting up aerospace integration..."
  
  # Create the aerospace config directory if it doesn't exist
  mkdir -p "$(dirname "$AEROSPACE_CONFIG")"
  
  # Add the event trigger if it doesn't exist
  if [ -f "$AEROSPACE_CONFIG" ]; then
    if ! grep -q "exec-on-workspace-change.*sketchybar" "$AEROSPACE_CONFIG"; then
      echo "" >> "$AEROSPACE_CONFIG"
      echo "# Sketchybar integration" >> "$AEROSPACE_CONFIG"
      echo "exec-on-workspace-change = [" >> "$AEROSPACE_CONFIG"
      echo "    '/bin/bash', '-c'," >> "$AEROSPACE_CONFIG"
      echo "    'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=\$AEROSPACE_FOCUSED_WORKSPACE'" >> "$AEROSPACE_CONFIG"
      echo "]" >> "$AEROSPACE_CONFIG"
    fi
  else
    # Create minimal aerospace config if it doesn't exist
    echo "Creating minimal aerospace config..."
    echo "# AeroSpace configuration" > "$AEROSPACE_CONFIG"
    echo "" >> "$AEROSPACE_CONFIG"
    echo "# Sketchybar integration" >> "$AEROSPACE_CONFIG"
    echo "exec-on-workspace-change = [" >> "$AEROSPACE_CONFIG"
    echo "    '/bin/bash', '-c'," >> "$AEROSPACE_CONFIG"
    echo "    'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=\$AEROSPACE_FOCUSED_WORKSPACE'" >> "$AEROSPACE_CONFIG"
    echo "]" >> "$AEROSPACE_CONFIG"
  fi
  
  echo "Aerospace integration complete!"
}

# Setup trackpad gesture support
setup_gestures() {
  echo "Setting up trackpad gesture support..."
  
  # Create the swipe event handler script
  mkdir -p "$CONFIG_DIR/plugins"
  cp "$CONFIG_DIR/utils/trackpad_gestures.sh" "$CONFIG_DIR/plugins/"
  chmod +x "$CONFIG_DIR/plugins/trackpad_gestures.sh"
  
  echo "Trackpad gesture support is ready!"
  echo "Use with: $CONFIG_DIR/plugins/trackpad_gestures.sh left|right"
}

# Main setup
echo "Setting up sketchybar-aerospace integration..."

setup_skhd
setup_aerospace
setup_gestures

echo ""
echo "Integration setup complete!"
echo "Restart skhd and aerospace for changes to take effect:"
echo "brew services restart skhd"
echo "brew services restart aerospace"